@page "/addinventory"
@inject IAddInventoryUseCase AddInventoryUseCase
@inject NavigationManager NavigationManager
<h3>AddInventory</h3>
<br />
@if (inventory != null)
{
    <EditForm Model="inventory" OnValidSubmit="OnValidSumbit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Iventory Name</label>
            <InputText id="name" @bind-Value="inventory.InventoryName" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="qty">Quantity</label>
            <InputNumber id="qty" @bind-Value="inventory.Quantity" class="form-control"></InputNumber>
        </div>
        <div class="form-group">
            <label for="price">Iventory Name</label>
            <InputNumber id="price" @bind-Value="inventory.Price" class="form-control"></InputNumber>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
    </EditForm>
}

@code {
    private Inventory? inventory;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        inventory = new Inventory();
    }

    private async Task OnValidSumbit()
    {
        if (this.inventory != null)
        {
            await AddInventoryUseCase.ExecuteAsync(this.inventory);
            NavigationManager.NavigateTo("/inventories");
        }
    }
}
